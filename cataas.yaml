openapi: 3.0.1
info:
  version: 1.0.0
  title: Cataas
  description:
    Cataas API - API for cat images. For getting the image url, join the image url in responses with https://cataas.com as a prefix.

    Example - /cat/LiJT1kTcbju7V9s0, url will be https://cataas.com/cat/LiJT1kTcbju7V9s0.
  termsOfService: http://api_url/terms/
  contact:
    name: Kevin Balicot
    email: kevinbalicot@gmail.com
    url: https://cataas.com/
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://cataas.com
tags:
  - name: Cats
    description: Cat managing
  - name: API
    description: Cat metadata
paths:
  /cat:
    get:
      description: Get random cat
      tags:
        - Cats
      operationId: getRandomCat
      parameters:
        - name: type
          in: query
          schema:
            type: string
            enum:
              - small
              - medium
              - square
              - original
        - name: filter
          in: query
          schema:
            type: string
            enum:
              - blur
              - mono
              - sepia
              - negative
              - paint
              - pixel
        - name: width
          in: query
          schema:
            type: string
        - name: height
          in: query
          schema:
            type: string
        - name: html
          in: query
          schema:
            type: boolean
        - name: json
          in: query
          schema:
            type: boolean
      responses:
        "200":
          description: Cat returned
  /cat/{id}:
    get:
      description: Get cat by id
      tags:
        - Cats
      operationId: getCatById
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
        - name: type
          in: query
          schema:
            type: string
            enum:
              - small
              - medium
              - square
              - original
        - name: filter
          in: query
          schema:
            type: string
            enum:
              - blur
              - mono
              - sepia
              - negative
              - paint
              - pixel

        - name: width
          in: query
          schema:
            type: string
        - name: height
          in: query
          schema:
            type: string
        - name: html
          in: query
          schema:
            type: boolean
        - name: json
          in: query
          schema:
            type: boolean
      responses:
        "200":
          description: Cat returned
        "404":
          description: Cat not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: integer
  /cat/{tag}:
    get:
      description: Get random cat by tag
      tags:
        - Cats
      operationId: getCatByTag
      parameters:
        - name: tag
          in: path
          schema:
            type: string
          required: true
        - name: type
          in: query
          schema:
            type: string
            enum:
              - small
              - medium
              - square
              - original
        - name: filter
          in: query
          schema:
            type: string
            enum:
              - blur
              - mono
              - sepia
              - negative
              - paint
              - pixel
        - name: width
          in: query
          schema:
            type: string
        - name: height
          in: query
          schema:
            type: string
        - name: html
          in: query
          schema:
            type: boolean
        - name: json
          in: query
          schema:
            type: boolean
      responses:
        "200":
          description: Cat returned
  /cat/says/{text}:
    get:
      description: Get random cat saying text
      tags:
        - Cats
      operationId: getCatWithText
      parameters:
        - name: text
          in: path
          schema:
            type: string
          required: true
        - name: type
          in: query
          schema:
            type: string
            enum:
              - small
              - medium
              - square
              - original
        - name: filter
          in: query
          schema:
            type: string
            enum:
              - blur
              - mono
              - sepia
              - negative
              - paint
              - pixel
        - name: width
          in: query
          schema:
            type: string
        - name: height
          in: query
          schema:
            type: string
        - name: html
          in: query
          schema:
            type: boolean
        - name: json
          in: query
          schema:
            type: boolean
      responses:
        "200":
          description: Cat returned
  /cat/{id}/says/{text}:
    get:
      description: Get cat by id saying text
      tags:
        - Cats
      operationId: getCatBtIdWithText
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
        - name: text
          in: path
          schema:
            type: string
          required: true
        - name: type
          in: query
          schema:
            type: string
            enum:
              - small
              - medium
              - square
              - original
        - name: filter
          in: query
          schema:
            type: string
            enum:
              - blur
              - mono
              - sepia
              - negative
              - paint
              - pixel

        - name: width
          in: query
          schema:
            type: string
        - name: height
          in: query
          schema:
            type: string
        - name: html
          in: query
          schema:
            type: boolean
        - name: json
          in: query
          schema:
            type: boolean
      responses:
        "200":
          description: Cat returned
        "404":
          description: Cat not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: integer
  /cat/{tag}/says/{text}:
    get:
      description: Get random cat by tag saying text
      tags:
        - Cats
      operationId: getCatByTagWithText
      parameters:
        - name: tag
          in: path
          schema:
            type: string
          required: true
        - name: text
          in: path
          schema:
            type: string
          required: true
        - name: type
          in: query
          schema:
            type: string
            enum:
              - small
              - medium
              - square
              - original
        - name: filter
          in: query
          schema:
            type: string
            enum:
              - blur
              - mono
              - sepia
              - negative
              - paint
              - pixel

        - name: width
          in: query
          schema:
            type: string
        - name: height
          in: query
          schema:
            type: string
        - name: html
          in: query
          schema:
            type: boolean
        - name: json
          in: query
          schema:
            type: boolean
      responses:
        "200":
          description: Cat returned
  /api/cats:
    get:
      description: Will return all cats
      tags:
        - API
      operationId: allCats
      parameters:
        - name: limit
          in: query
          schema:
            type: number
            default: 10
        - name: skip
          in: query
          schema:
            type: number
            default: 0
        - name: tags
          in: query
          schema:
            type: string
      responses:
        "200":
          description: List of cats
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - file
                    - tags
                  type: object
                  properties:
                    _id:
                      type: string
                    tags:
                      type: array
                      items:
                        type: string
                      default: []
                    owner:
                      type: string
                    createdAt:
                      type: string
                      format: datetime
                    updatedAt:
                      type: string
                      format: datetime
  /api/tags:
    get:
      description: Will return all cats
      tags:
        - API
      operationId: getTags
      responses:
        "200":
          description: List of tags
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /api/count:
    get:
      description: Count how many cat
      tags:
        - API
      operationId: getAllCatCount
      responses:
        "200":
          description: Count of cats
          content:
            application/json:
              schema:
                type: object
                properties:
                  number:
                    type: integer
